datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Organisation {
  id          String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String       @db.VarChar(255)
  created_at  DateTime?    @default(now())
  departments Department[]
  leaveTypes  LeaveType[]
  users       User[]

  @@map("organisations")
}

model Department {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  organisation   Organisation @relation(fields: [organisationId], references: [id])
  organisationId String       @map("organisation_id") @db.Uuid

  members Membership[]

  @@map("departments")
}

model LeaveType {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  organisation   Organisation @relation(fields: [organisationId], references: [id])
  organisationId String       @map("organisation_id") @db.Uuid

  @@map(name: "leave_types")
}

model User {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userName       String?      @unique @map("user_name")
  name           String?
  email          String?      @unique
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  organisationId String       @map("organisation_id") @db.Uuid
  membership     Membership[]

  @@map("users")
}

model Membership {
  departmentId String     @db.Uuid
  userId       String     @db.Uuid
  department   Department @relation(fields: [departmentId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
  createdAt    DateTime   @default(now()) @map("created_at")

  @@id([userId, departmentId])
  @@map("memberships")
}
